<h1>公佈欄</h1>
<p>stud.cycu.org 伺服器 <a href="https://nfuedu-my.sharepoint.com/:x:/g/personal/yen_nfu_edu_tw/ET-JZNPkNtZDhFiLt8BGZZ4BFMVV1HE73WQt1V44y6vnCQ?e=fQeO7i">port 分配表</a>.</p>
<p>w4 開始, 各班先進教室的學員, 可以往前面自己選電腦位置上課, <span style="color: #ff0000;">不再按照學號固定座位</span>.</p>
<hr/>
<div>大二學制以上同學要取得 @nfu.edu.tw 電子郵箱登記的 Onedrive 帳號管理步驟:</div>
<ol itemprop="copy-paste-block">
<li>由於學校已經統一幫全校師生以 @nfu.edu.tw 電子郵箱登記 Microsoft 教育帳號, 因此大二以上同學<span style="color: #ef6950;"><strong>無需新建帳號, 而是取得該帳號的管理權</strong></span>.</li>
<li>先從 <a data-cke-saved-href="https://mail.nfu.edu.tw" href="https://mail.nfu.edu.tw" rel="noreferrer noopener" target="_blank" title="https://mail.nfu.edu.tw/">https://mail.nfu.edu.tw</a>, 以學號與密碼登入 @nfu.edu.tw mail 2000 電子郵箱.</li>
<li>直接在 <a data-cke-saved-href="https://onedrive.live.com/about/zh-hw/signin/" href="https://onedrive.live.com/about/zh-hw/signin/" rel="noreferrer noopener" target="_blank" title="https://onedrive.live.com/about/zh-hw/signin/">Onedrive 登入</a>畫面, 以"學號@nfu.edu.tw"輸入作為登入帳號, 點選下一步後, 若出現"忘記密碼"選項, 表示帳號已經建立, 此時點選"忘記密碼", 系統就會寄出修改密碼的連結至"學號@nfu.edu.tw"電子郵箱.</li>
<li>從上列已經登入的電子郵箱, 修改登入 Onedrive 系統的帳號對應密碼.</li>
<li>之後利用"學號@nfu.edu.tw" 登入 <a data-cke-saved-href="https://onedrive.live.com/about/zh-hw/signin/" href="https://onedrive.live.com/about/zh-hw/signin/" rel="noreferrer noopener" target="_blank" title="https://onedrive.live.com/about/zh-hw/signin/">Onedrive</a>, 以下列 Teams codes, 就可以分別進入課程教室.</li>
</ol>
<hr/>
<p>只要登入 @nfu.edu.tw 對應的 Teams 帳號, 就可以進以下教室:</p>
<h4 style="padding-left: 30px;">cp2022 Teams code: xry4zv3 (計算機程式)</h4>
<h4 style="padding-left: 30px;">cad2022 Teams code: dyw3r9h (電腦輔助設計實習)</h4>
<hr/>
<p>為了簡化各學員建立課程倉儲與網站的流程, 2022 Fall 起採用 <a href="https://classroom.github.com/">Github Classroom</a> 管理學員倉儲.</p>
<p>為了配合疫情需求, 2022 Fall w3 起上課將採用 <a href="https://en.wikipedia.org/wiki/Microsoft_Teams">Microsoft Teams</a> 以 Meet 上課. 各學員若無法實體赴校上課, 可以直接就地線上參與課程.</p>
<hr/>
<p>OnShape 上的 fosball table:</p>
<p><a href="https://cad.onshape.com/documents/f30f0cd8b9dc8ca3ed4382c3/w/0a449a9e4794341cffde87a0/e/11ea0a6fd5b89099e65452f1">https://cad.onshape.com/documents/f30f0cd8b9dc8ca3ed4382c3/w/0a449a9e4794341cffde87a0/e/11ea0a6fd5b89099e65452f1</a></p>
<hr/>
<p><strong>2022 Fall 計算機程式 - classroom</strong></p>
<p style="padding-left: 30px;">1b: <a href="https://ethercalc.net/ll5ki4lsoabr">https://ethercalc.net/ll5ki4lsoabr</a> </p>
<p style="padding-left: 30px;">登入 github 帳號後連結至:</p>
<p style="padding-left: 60px;"><a href="https://classroom.github.com/a/Bu2JQVow">https://classroom.github.com/a/Bu2JQVow</a></p>
<h4>2022 Fall 電腦輔助設計與實習-classroom</h4>
<p style="padding-left: 30px;">登入 github 帳號後連結至: <a href="https://classroom.github.com/a/ivEMxuXH">https://classroom.github.com/a/ivEMxuXH</a> </p>
<p style="padding-left: 30px;">登記 github 帳號: <a href="https://ethercalc.net/9l4hsui6jkj7">https://ethercalc.net/9l4hsui6jkj7</a></p>
<p style="padding-left: 30px;">目前可從 <a href="https://mde.tw/studlist/2022fall/2a.txt">https://mde.tw/studlist/2022fall/2a.txt</a> 讀出已經填入資料的學員帳號</p>
<p style="padding-left: 60px;">若資料有異動, 可以從 <a href="https://github.com/mdecycu/studlist">https://github.com/mdecycu/studlist</a> 以<a href="https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests"> Pull Requests</a> (<a href="https://mde.tw/content/Pull%20Requests.html">教學</a>) 要求修改.</p>
<p>取得 site-Github_帳號 倉儲管理權限</p>
<div id="disqus_thread"></div>
<p>
<script>
/**
    *  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
    *  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables    */
    /*
    var disqus_config = function () {
    this.page.url = PAGE_URL;  // Replace PAGE_URL with your page's canonical URL variable
    this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable
    };
    */
    (function() { // DON'T EDIT BELOW THIS LINE
    var d = document, s = d.createElement('script');
    s.src = 'https://mdetw.disqus.com/embed.js';
    s.setAttribute('data-timestamp', +new Date());
    (d.head || d.body).appendChild(s);
    })();
</script>
</p>
<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript><h2>TCExam</h2>
<p>nginx 只允許特定 IPv6 網段連線, 且將 http 用戶跳轉至 https 設定:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">    server {
        listen       [::]:80 default ipv6only=on;
        server_name  domain.cycu.org;
        #return       301 https://$server_name$request_uri;
        
        allow 2001:288:6004:xx::0/32;
        deny all;
	
	return 302 https://domain.cycu.org;
        
        #location /{
            #root C:/tcexam/downloads;
            #auth_basic "For Authorized Users Only!";
            #auth_basic_user_file C:/tcexam/nginx-1.20.1/.htpasswd;
        #}
    }</pre>
<p>nginx 執行 php 解譯設定:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">server { 
    listen    [::]:443 default ssl ipv6only=on;
    
    root C:/tcexam_dir/tcexam;

    server_name    domain.cycu.org;
    ssl_certificate    C:/tcexam_dir/fullchain.pem;
    ssl_certificate_key    C:/tcexam_dir/privkey.pem;
    ssl_protocols    TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers    HIGH:!aNULL:!MD5;
    
    allow 2001:288:6004:xx::0/32;
    deny all;
    
    location /{ 
        index index.html index.php;
    }
    
    location ~ \.php$ {
        fastcgi_pass   127.0.0.1:9123;
        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        include        fastcgi_params;
    }
}</pre>
<p>fastcgi 在 port 9123 啟動的 batch file:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">@ECHO OFF
ECHO Starting PHP FastCGI...
set PATH=C:\PHP8.1.7;%PATH%
c:\PHP8.1.7\RunHiddenConsole.exe C:\PHP8.1.7\php-cgi.exe -b 127.0.0.1:9123</pre>
<p>若採用 nssm 建立服務, 則透過下列設定建立:</p>
<p>nssm install php 建立 php 服務.</p>
<p>nssm edit php 則用來編輯服務.</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">Path: C:\tcexam_dir\php8.1.7\php-cgi.exe

Startup Directory: C:\tcexam_dir\php8.1.7

Arguments: -b 127.0.0.1:9123</pre>
<p><br/><br/></p>
<p></p>
<h2>雲端與近端</h2>
<h4><span data-contrast="none"><span>雲端版工具:</span></span></h4>
<p><span data-contrast="none"><span>分散式版次管理系統:  - 登入<a href="https://github.com/"> <span style="color: #ff0000;">github</span></a> (靜態網站)</span></span><span> </span></p>
<p><span data-contrast="none"><span>雲端整合程式開發環境: - 登入 <span style="color: #ff0000;"><a href="https://replit.com" style="color: #ff0000;">replit</a></span> (雲端動態網站)</span></span><span> </span></p>
<p><span data-contrast="none"><span>電子郵件系統: - 登入 </span></span><span data-contrast="none" style="color: #ff0000;"><a href="https://mail.nfu.edu.tw" style="color: #ff0000;">https://mail.nfu.edu.tw</a> </span><span data-contrast="none"><span>(學號@nfu.edu.tw)</span></span>, 採用 mail200 轉信至 <span style="color: #ff0000;">Gmail</span></p>
<p><span data-contrast="none"><span>雲端硬碟 - 登入 <span style="color: #ff0000;">Onedrive</span> (需要 5TB 儲存資料, <span style="color: #ff0000;">Teams</span> 與 <span style="color: #ff0000;">Meet</span> 上課)</span></span><span> </span></p>
<p><span>雲端教室 - MS <span style="color: #ff0000;">Teams</span> (教學影片與課程教材) 與 <span style="color: #ff0000;">Github Classroom</span> (學員倉儲與網站)</span></p>
<p><span data-contrast="none"><span>雲端 MCAD: - 登入 <span style="color: #ff0000;"><a href="https://www.onshape.com/" style="color: #ff0000;">Onshape</a></span> (可以在平板與手機上繪製或檢視零組件)</span></span><span> </span></p>
<p><span>繪製流程圖: <a href="https://app.diagrams.net/" title="https://app.diagrams.net/"><span style="color: #ff0000;">https://app.diagrams.net/</span> </a></span></p>
<hr/>
<h4><span data-contrast="none"><span>近端版工具:</span></span></h4>
<p><span data-contrast="none"><span>Siemens <span style="color: #ff0000;">NX 2027</span> (高階 MCAD)</span></span><span> </span></p>
<p><span data-contrast="none"><span><span style="color: #ff0000;">Solvespace 3.0</span> (有原始碼的參數式繪圖軟體)</span></span><span> </span></p>
<p><span data-contrast="none" style="color: #ff0000;">CoppeliaSim 4.3.0</span><span> (機電資系統模擬軟體)</span></p>
<p><span data-contrast="none"><span>可攜 Python</span></span><span> 3.10.6</span></p>
<p><span data-contrast="none"><span>可攜 MSYS2</span></span></p>
<p><span data-contrast="none"><span>PC, Notebook</span></span>, Servers (Windows 10, Windows Server 2022, Ubuntu 20.04, 22.04)</p>
<p><span> </span></p>
<h1>cp2022</h1>
<p><a href="https://nfu.cycu.org/?semester=1111&amp;courseno=0747&amp;column=True">1a 計算機程式修課學員名單</a> (取自教務主機)</p>
<p><a href="https://nfu.cycu.org/?semester=1111&amp;courseno=0761&amp;column=True">1b 計算機程式修課學員名單</a><span><span> </span></span><span>(取自教務主機)</span></p>
<div>
<div><a href="https://nfuedu-my.sharepoint.com/:x:/g/personal/yen_nfu_edu_tw/EQPaqjqHN45EjaCr336Co1gB0EnqiOfZgWFfuISc3NcP5w?e=d0z6xc&amp;isSPOFile=1" rel="noreferrer noopener" tabindex="-1" target="_blank" title="https://nfuedu-my.sharepoint.com/:x:/g/personal/yen_nfu_edu_tw/eqpaqjqhn45ejacr336co1gb0enqiofzgwffuisc3ncp5w?e=d0z6xc">1a 學號與 Github 帳號對照表</a></div>
<div><a href="https://nfuedu-my.sharepoint.com/:x:/g/personal/yen_nfu_edu_tw/Efm2pg72G3lLsY8yDD1WhV0BPjCwxti2hIjGeZeKHHTvTw?e=vMdhjT" rel="noreferrer noopener" tabindex="-1" target="_blank" title="https://nfuedu-my.sharepoint.com/:x:/g/personal/yen_nfu_edu_tw/efm2pg72g3llsy8ydd1whv0bpjcwxti2hijgezekhhtvtw?e=vmdhjt">1b 學號與 Github 帳號對照表</a></div>
<div><hr/></div>
</div>
<p><a href="https://github.com/Shohrab-Hossain/Tic-Tac-Toe-web">https://github.com/Shohrab-Hossain/Tic-Tac-Toe-web</a></p>
<p><a href="https://github.com/chfw/brython-pack">https://github.com/chfw/brython-pack</a></p>
<p>利用下列網際程式架構, 可以設法取出教務主機所有公開資料.</p>
<p>擷取學員名單程式碼:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from flask import Flask, request 
from flask_cors import CORS
  
import requests
import bs4
#import ssl
  
'''
1a - 2b
?semester=1111&amp;courseno=0747&amp;column=True 

?semester=1111&amp;courseno=0761&amp;column=True 

?semester=1111&amp;courseno=0773&amp;column=True 

?semester=1111&amp;courseno=0786&amp;column=True 
'''

app = Flask(__name__)
CORS(app)
  
@app.route('/studlist')
@app.route('/')
def studlist():
    semester = request.args.get('semester')
    courseno = request.args.get('courseno')
    column = request.args.get('column')

    if semester == None:
        semester = '1091'
    if courseno == None:
        courseno = '0762'
    
    headers = {'X-Requested-With': 'XMLHttpRequest'}

    url = 'https://qry.nfu.edu.tw/studlist_ajax.php'
    post_var = {'pselyr': semester, 'pseqno': courseno}
  
    result = requests.post(url, data = post_var, headers = headers)
    soup = bs4.BeautifulSoup(result.content, 'lxml')
    table = soup.find('table', {'class': 'tbcls'})
    data = []
    rows = table.find_all('tr')
    for row in rows:
        cols = row.find_all('td')
        cols = [ele.text.strip() for ele in cols]
        data.append([ele for ele in cols if ele]) # Get rid of empty values
    output = ""
    for i in data[2:]:
        if column == "True":
            output +=i[0] + "&lt;/br&gt;"
        else:
            output +=i[0] + "\n"
        
    return output
  
# 即使在近端仍希望以 https 模式下執行
#context = ssl.SSLContext(ssl.PROTOCOL_TLSv1_2)
#context.load_cert_chain('localhost.crt', 'localhost.key')
  
if __name__ == '__main__':
    app.run(host='127.0.0.1', port=8080, debug=True)</pre>
<h2>cp 抽點</h2>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># Python 的註解分為單行註解與多行, 單行註解可在字串前方放入 #
'''多行註解則可以透過三個單引號前後標註字串或文字段落內容, 
也可以使用三個雙引號作為多行註解的標註
'''
# 使用 import 導入 random 模組, 隨後就可以直接引用 random 模組的方法
import random
cp1a = "0747"
# 宣告 url 變數值為字串, 此字串為取得 cp2022 1a 選課成員名單
url = "https://nfu.cycu.org/?semester=1111&amp;courseno=" + cp1a + "&amp;column=True"
# 利用上述已經宣告的 url 變數字串值, 作為 open() 函式的輸入變數, 可以連結至該網站
# 連接 url 所代表字串的網站後, 再利用 read() 函式讀取該網站的內容, 即可取得 cp2022 1a 的選課成員學號
# url 所屬的網站, 乃 69 中的一台虛擬主機 8/10ff-0-1-2, 並利用 Get 從教務主機取回課程註冊成員學號
# 由於所取回的學號以跳行符號隔開, 因此取回的學號資料行, 再利用 split() 函式, 以 \n 跳行符號分割後
# 所對應到 data 的資料型別將會是數列
data = open(url).read().split("\n")
# 經過檢查 data 數列, 發現最後一個 element 為空字串, 因此利用 [:-1] 去掉數列的最後一個元素, -1 代表數列最後一個元素的索引
#print(data[:-1])
# 設定一個變數, 與修課成員學號數列對應
stud = data[:-1]
# 使用 random 模組中的 shuffle() 函式, 以隨機的方式排列 stud 數列內容
random.shuffle(stud)
# 設定 num 與 5 對應, 或將 5 整數值存入 num 變數所對應的記憶體位址
num = 5
# 利用 for 重複迴圈與 range() 變數, 列印出 (利用 print() 函式) 已經隨機排列次序的 stud 數列的最前面 num 個學號值
for i in range(num):
    print(stud[i])</pre>
<p><a href="/get_page/Brython?src=https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/a35e9c4f72970911deeb8fc488b256ca7d19ae24/cp1a_2022_random_draw.py">cp a 抽點</a></p>
<p><a href="/get_page/Brython?src=https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/a35e9c4f72970911deeb8fc488b256ca7d19ae24/cp1b_2022_random_draw.py">cp b 抽點</a></p><h1>cad2022</h1>
<p><a href="https://nfu.cycu.org/?semester=1111&amp;courseno=0773&amp;column=True">2a 電腦輔助設計與實習修課學員名單</a><span><span> </span></span><span>(取自教務主機)</span></p>
<p><span><a href="https://nfu.cycu.org/?semester=1111&amp;courseno=0786&amp;column=True">2b 電腦輔助設計與實習修課學員名單</a><span><span> </span></span><span>(取自教務主機)</span></span></p>
<div>
<div><a href="https://nfuedu-my.sharepoint.com/:x:/g/personal/yen_nfu_edu_tw/EW8X2fxXZLNDrMMwTOCMj7kBc5Sy7fUiC6j5bX4WCenprg?e=RArMBW&amp;isSPOFile=1" rel="noreferrer noopener" tabindex="-1" target="_blank" title="https://nfuedu-my.sharepoint.com/:x:/g/personal/yen_nfu_edu_tw/ew8x2fxxzlndrmmwtocmj7kbc5sy7fuic6j5bx4wcenprg?e=rarmbw">2a 學號與 Github 帳號對照表</a></div>
<div><a href="https://nfuedu-my.sharepoint.com/:x:/g/personal/yen_nfu_edu_tw/Ec0bGLTPPg9OqlWTMSFy6EsBJhQX0H6zlzoczTj4wjVLQg?e=PBj7Yu" rel="noreferrer noopener" tabindex="-1" target="_blank" title="https://nfuedu-my.sharepoint.com/:x:/g/personal/yen_nfu_edu_tw/ec0bgltppg9oqlwtmsfy6esbjhqx0h6zlzocztj4wjvlqg?e=pbj7yu">2b 學號與 Github 帳號對照表</a></div>
<div><hr/></div>
</div>
<p>擷取學員名單程式碼:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from flask import Flask, request 
from flask_cors import CORS
  
import requests
import bs4
#import ssl
  
'''
1a - 2b
?semester=1111&amp;courseno=0747&amp;column=True 

?semester=1111&amp;courseno=0761&amp;column=True 

?semester=1111&amp;courseno=0773&amp;column=True 

?semester=1111&amp;courseno=0786&amp;column=True 
'''

app = Flask(__name__)
CORS(app)
  
@app.route('/studlist')
@app.route('/')
def studlist():
    semester = request.args.get('semester')
    courseno = request.args.get('courseno')
    column = request.args.get('column')

    if semester == None:
        semester = '1091'
    if courseno == None:
        courseno = '0762'
    
    headers = {'X-Requested-With': 'XMLHttpRequest'}

    url = 'https://qry.nfu.edu.tw/studlist_ajax.php'
    post_var = {'pselyr': semester, 'pseqno': courseno}
  
    result = requests.post(url, data = post_var, headers = headers)
    soup = bs4.BeautifulSoup(result.content, 'lxml')
    table = soup.find('table', {'class': 'tbcls'})
    data = []
    rows = table.find_all('tr')
    for row in rows:
        cols = row.find_all('td')
        cols = [ele.text.strip() for ele in cols]
        data.append([ele for ele in cols if ele]) # Get rid of empty values
    output = ""
    for i in data[2:]:
        if column == "True":
            output +=i[0] + "&lt;/br&gt;"
        else:
            output +=i[0] + "\n"
        
    return output
  
# 即使在近端仍希望以 https 模式下執行
#context = ssl.SSLContext(ssl.PROTOCOL_TLSv1_2)
#context.load_cert_chain('localhost.crt', 'localhost.key')
  
if __name__ == '__main__':
    app.run(host='127.0.0.1', port=8080, debug=True)</pre>
<h2>stud for cad</h2>
<p></p>
<h2>cad 抽點</h2>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># Python 的註解分為單行註解與多行, 單行註解可在字串前方放入 #
'''多行註解則可以透過三個單引號前後標註字串或文字段落內容, 
也可以使用三個雙引號作為多行註解的標註
'''
# 使用 import 導入 random 模組, 隨後就可以直接引用 random 模組的方法
import random
cad2a = "0773"
# 宣告 url 變數值為字串, 此字串為取得 cp2022 1a 選課成員名單
url = "https://nfu.cycu.org/?semester=1111&amp;courseno=" + cad2a + "&amp;column=True"
# 利用上述已經宣告的 url 變數字串值, 作為 open() 函式的輸入變數, 可以連結至該網站
# 連接 url 所代表字串的網站後, 再利用 read() 函式讀取該網站的內容, 即可取得 cp2022 1a 的選課成員學號
# url 所屬的網站, 乃 69 中的一台虛擬主機 8/10ff-0-1-2, 並利用 Get 從教務主機取回課程註冊成員學號
# 由於所取回的學號以跳行符號隔開, 因此取回的學號資料行, 再利用 split() 函式, 以 \n 跳行符號分割後
# 所對應到 data 的資料型別將會是數列
data = open(url).read().split("\n")
# 經過檢查 data 數列, 發現最後一個 element 為空字串, 因此利用 [:-1] 去掉數列的最後一個元素, -1 代表數列最後一個元素的索引
#print(data[:-1])
# 設定一個變數, 與修課成員學號數列對應
stud = data[:-1]
# 使用 random 模組中的 shuffle() 函式, 以隨機的方式排列 stud 數列內容
random.shuffle(stud)
# 設定 num 與 5 對應, 或將 5 整數值存入 num 變數所對應的記憶體位址
num = 5
# 利用 for 重複迴圈與 range() 變數, 列印出 (利用 print() 函式) 已經隨機排列次序的 stud 數列的最前面 num 個學號值
for i in range(num):
    print(stud[i])</pre>
<p><a href="/get_page/Brython?src=https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/a35e9c4f72970911deeb8fc488b256ca7d19ae24/cad2a_2022_random_draw.py">cad a 抽點</a></p>
<p><a href="/get_page/Brython?src=https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/a35e9c4f72970911deeb8fc488b256ca7d19ae24/cad2b_2022_random_draw.py">cad b 抽點</a></p><h2>NX</h2>
<p>File -&gt; Utilities -&gt; Customer Defaults -&gt; General -&gt; Miscellaneous -&gt; Product Excellence Program</p>
<h2>Control</h2>
<p><a href="https://github.com/sooryamsharma/Hand-Gesture-Controlled-Drone">https://github.com/sooryamsharma/Hand-Gesture-Controlled-Drone</a></p>
<p></p><h1>About</h1>
<p>這裡是 <a href="https://mde.tw">https://mde.tw</a> 課程教學的 replit 線上動態網站, 主要用來公布與上課進度有關的短暫訊息內容, 通常只有在上課時段才會開啟.</p>
<p>wcms for mde.tw on replit</p>
<p><a href="https://cycu.org">https://cycu.org</a> - Chiaming Yen's Cyber Universe</p>
<hr/>
<p>RoboDK:</p>
<p style="padding-left: 30px;"><a href="https://github.com/RoboDK">https://github.com/RoboDK</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/topics/robodk">https://github.com/topics/robodk</a></p>
<p style="padding-left: 30px;"><a href="https://robodk.com/downloads/Install-RoboDK-64-v5.2.2.exe">https://robodk.com/downloads/Install-RoboDK-64-v5.2.2.exe</a></p>
<p style="padding-left: 30px;"><a href="https://robodk.com/downloads/Install-RoboDK-64-v5.5.1.exe">https://robodk.com/downloads/Install-RoboDK-64-v5.5.1.exe</a></p>
<hr/>
<p><a href="https://www.youtube.com/channel/UCJ0Ye3mhMApH0yxAcwCXs5g/videos">先前課程相關影片</a></p>
<h2>nfulist</h2>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import requests
import bs4

proxies = {
        'http': 'http://[2001:288:6004:17::xx]:3128',
        'https': 'http://[2001:288:6004:17::xx]:3128'
        }

semester = '1091'
courseno = '0762'
column = True

headers = {'X-Requested-With': 'XMLHttpRequest'}

url = 'https://qry.nfu.edu.tw/studlist_ajax.php'
post_var = {'pselyr': semester, 'pseqno': courseno}

# need to executed through proxy server
result = requests.post(url, data = post_var, headers = headers, proxies=proxies)

soup = bs4.BeautifulSoup(result.content, 'lxml')
table = soup.find('table', {'class': 'tbcls'})
data = []
rows = table.find_all('tr')
for row in rows:
    cols = row.find_all('td')
    cols = [ele.text.strip() for ele in cols]
    data.append([ele for ele in cols if ele]) # Get rid of empty values
output = ""
for i in data[2:]:
    #print(i[0])
    if column == "True":
        output +=i[0] + "&lt;/br&gt;"
    else:
        output +=i[0] + "\n"

print(output)</pre>
<p>Web based:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># 以 Flask 作為網際框架, 
from flask import Flask, request
# 允許跨網站擷取資料
from flask_cors import CORS

# 利用 requests 取回網站中的頁面資料
import requests
# 利用 beautifulsoup 解讀超文件網頁內容
import bs4
# 若在近端啟動也要採用 SSL 時導入
#import ssl
  
'''
2022 Fall 各班課程代號
1a - 2b
?semester=1111&amp;courseno=0747&amp;column=True 

?semester=1111&amp;courseno=0761&amp;column=True 

?semester=1111&amp;courseno=0773&amp;column=True 

?semester=1111&amp;courseno=0786&amp;column=True 

'''
proxies ={
'http': 'http://account:password@[2001:288:6004:17::4]:3128',
'https': 'http://account:password@[2001:288:6004:17::4]:3128'
}

app = Flask(__name__)
CORS(app)
  
@app.route('/studlist')
@app.route('/')
def studlist():
    semester = request.args.get('semester')
    courseno = request.args.get('courseno')
    column = request.args.get('column')

    if semester == None:
        semester = '1091'
    if courseno == None:
        courseno = '0762'
    
    headers = {'X-Requested-With': 'XMLHttpRequest'}

    url = 'https://qry.nfu.edu.tw/studlist_ajax.php'
    post_var = {'pselyr': semester, 'pseqno': courseno}
    
    # 可透過 Proxy server 執行程式
    #result = requests.post(url, data = post_var, headers = headers, proxies = proxies)
    result = requests.post(url, data = post_var, headers = headers)
    soup = bs4.BeautifulSoup(result.content, 'lxml')
    table = soup.find('table', {'class': 'tbcls'})
    data = []
    rows = table.find_all('tr')
    for row in rows:
        cols = row.find_all('td')
        cols = [ele.text.strip() for ele in cols]
        data.append([ele for ele in cols if ele]) # Get rid of empty values
    output = ""
    for i in data[2:]:
        #print(i[0])
        if column == "True":
            output +=i[0] + "&lt;/br&gt;"
        else:
            output +=i[0] + "\n"
        
    return output
    #return  str(pselyr) + " + " +str(pseqno)
  
# 即使在近端仍希望以 https 模式下執行
#context = ssl.SSLContext(ssl.PROTOCOL_TLSv1_2)
#context.load_cert_chain('localhost.crt', 'localhost.key')
  
if __name__ == '__main__':
    app.run(host='127.0.0.1', port=8080, debug=True)</pre>
<p></p>
<h2>Onedrive</h2>
<p>之後上課的認證 email address 都將使用 @nfu.edu.tw, 大二以上的 @gm 帳號僅當作備用帳號.</p>
<p>若兩個信箱都至 <a href="https://www.microsoft.com/zh-tw/education/products/office">https://www.microsoft.com/zh-tw/education/products/office</a> 註冊, 將可各取得 5TB 的雲端儲存空間.</p>
<h2>USB drive</h2>
<p>最簡單的作法: Select <b class="ocpUI">Start </b><span class="icon-mdl2 icon-windowslogo"></span> &gt; <b class="ocpUI">Settings </b><span class="icon-mdl2 icon-settings"></span> &gt; <b class="ocpUI">Devices</b>. Select the device, and select <b class="ocpUI">Remove device</b>.</p>
<p><a href="https://support.microsoft.com/en-au/windows/safely-remove-hardware-in-windows-1ee6677d-4e6c-4359-efca-fd44b9cec369">Safely remove USB dirve</a></p>
<p>Windows 10:</p>
<p></p>
<ul>
<li itemprop="itemListElement" itemscope="" itemtype="http://schema.org/ListItem">
<p>Look for the <b class="ocpUI">Safely Remove Hardware</b> icon on the taskbar. If you don't see it, select <b class="ocpUI">Show hidden icons </b><span class="icon-mdl2 icon-chevronup"></span>. Press and hold (or right-click) the icon and select the hardware you want to remove.</p>
</li>
<li itemprop="itemListElement" itemscope="" itemtype="http://schema.org/ListItem">
<p>If you can't find the <b class="ocpUI">Safely Remove Hardware</b> icon, press and hold (or right-click) the taskbar and select <b class="ocpUI">Taskbar settings </b><span class="icon-mdl2 icon-settings"></span>.</p>
</li>
<li itemprop="itemListElement" itemscope="" itemtype="http://schema.org/ListItem">
<p>Under <b class="ocpUI">Notification Area</b>, choose <b class="ocpUI">Select which icons appear on the taskbar</b>.</p>
</li>
<li itemprop="itemListElement" itemscope="" itemtype="http://schema.org/ListItem">
<p>Scroll to <b class="ocpUI">Windows Explorer: Safely Remove Hardware and Eject Media</b> and turn it on.</p>
</li>
<li itemprop="itemListElement" itemscope="" itemtype="http://schema.org/ListItem">
<p>If this doesn't work, make sure the device has stopped all activity like copying or syncing files. Select <b class="ocpUI">Start </b><span class="icon-mdl2 icon-windowslogo"></span> &gt; <b class="ocpUI">Settings </b><span class="icon-mdl2 icon-settings"></span> &gt; <b class="ocpUI">Devices</b>. Select the device, and select <b class="ocpUI">Remove device</b>.</p>
</li>
<li itemprop="itemListElement" itemscope="" itemtype="http://schema.org/ListItem">
<p>Finally, check with the hardware manufacturer for new drivers or other updates.</p>
</li>
</ul>
<p>Windows 11:</p>
<p></p>
<ul>
<li itemprop="itemListElement" itemscope="" itemtype="http://schema.org/ListItem">
<p>Look for the <b class="ocpUI">Safely Remove Hardware</b> icon on the taskbar. If you don't see it, select <b class="ocpUI">Show hidden icons </b><span class="icon-fluent icon-chevronup"></span>. Press and hold (or right-click) the icon and select the hardware you want to remove.<br/><br/><img alt="How to find the Safely Remove Hardware icon in Windows 11." loading="lazy" src="https://support.content.office.net/en-us/media/0edfcab7-c9ac-4c92-90d7-8373f7a7e8dc.png"/></p>
</li>
<li itemprop="itemListElement" itemscope="" itemtype="http://schema.org/ListItem">
<p>If you can't find the <b class="ocpUI">Safely Remove Hardware</b> icon, press and hold (or right-click) the taskbar and select <b class="ocpUI">Taskbar settings </b><span class="icon-fluent icon-settings"></span>.</p>
</li>
<li itemprop="itemListElement" itemscope="" itemtype="http://schema.org/ListItem">
<p>Select <b class="ocpUI">Taskbar corner overflow</b> to expand it. Scroll to <b class="ocpUI">Windows Explorer</b> (when you hover over it, the tooltip will read <b class="ocpUI">Safely Remove Hardware and Eject Media</b>) and turn it on.</p>
</li>
<li itemprop="itemListElement" itemscope="" itemtype="http://schema.org/ListItem">
<p>If this doesn't work, make sure the device has stopped all activity like copying or syncing files. Select <b class="ocpUI">Start </b><span class="icon-fluent icon-windowslogo"></span> &gt; <b class="ocpUI">Settings </b><span class="icon-fluent icon-settingsapp"></span> &gt; <b class="ocpUI">Bluetooth &amp; devices </b><span class="icon-fluent icon-bluetooth"></span> &gt; <b class="ocpUI">Devices </b><span class="icon-fluent icon-devices"></span>.</p>
</li>
<li itemprop="itemListElement" itemscope="" itemtype="http://schema.org/ListItem">
<p>Select <b class="ocpUI">More </b><span class="icon-fluent icon-morevertical"></span> next to the device, and select <b class="ocpUI">Remove device</b>.</p>
</li>
<li itemprop="itemListElement" itemscope="" itemtype="http://schema.org/ListItem">
<p>Finally, check with the hardware manufacturer for new drivers or other updates.</p>
</li>
</ul>
<h2>Ubuntu</h2>
<p>列出網卡代號:</p>
<p>sudo ls /sys/class/net</p>
<p>例如: 虛擬主機 Ubuntu 22.04 網卡代號為 enp0s3</p>
<p>一般 user 可以自行在倉儲根目錄配置 waitreee_server, 並在近端以特定 port 執行啟動. 然後再由 Stunnel 轉接至外部連線.</p>
<h4>waitress</h4>
<p>直接在倉儲根目錄建立 waitress_server.py</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from waitress import serve
from cmsimde import flaskapp

serve(flaskapp.app, listen="127.0.0.1:9443")</pre>
<p>表示要在 127.0.0.1:9443 執行 flaskapp.app, 然後透過 Stunnel 接收 9443 資料, 讓外部以 443 連接</p>
<p>Stunnel</p>
<p>安裝 <a href="https://www.stunnel.org/">stunnel</a> 也很簡單, 只要執行 sudo apt install stunnel4 即可, 安裝後若要隨系統開機啟動, 則需要 sudo vi /etc/default/stunnel4, 並在檔案中加入 ENABLED=1 後存檔.</p>
<p>另外, 還需要 sudo vi /etc/environment, 並在檔案中加入 HTTPS=on 後存檔.</p>
<p>接下來為了由 <a href="https://www.stunnel.org/">stunnel</a> 代理 <a href="https://www.fossil-scm.org">Fossil SCM</a> 的 https 伺服, 必須加入 /etc/stunnel/stunnel.conf</p>
<p>stunnel.conf</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">[https]
accept = stud.cycu.org:443
connect = 127.0.0.1:9443
cert = fullchain.pem
key = privkey.pem
TIMEOUTclose = 0</pre>
<p>/etc/init.d/stunnel4 restart</p>
<p>Add bulk user in Ubuntu:</p>
<p><a href="https://www.tutorialspoint.com/how-to-create-multiple-user-accounts-in-linux">https://www.tutorialspoint.com/how-to-create-multiple-user-accounts-in-linux</a></p>
<hr/>
<p>Get user id:<br/><br/>cut -d: -f1,3 /etc/passwd<br/><br/>    -d: sets the delimiter as : for cut<br/><br/>    -f1,3 extracts the field 1 and 3 only delimited by : from the /etc/passwd file</p>
<hr/>
<p>Create new user:</p>
<p>users.txt</p>
<p style="padding-left: 30px;">user_1:password_2:1002:1002:user_1:/home/user_1:/bin/bash</p>
<p>sudo newusers users.txt</p>
<hr/>
<p>Get IPv6 address:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import socket

ip = socket.getaddrinfo("stud.cycu.org", 0, socket.AF_INET6)[0][4][0]

print(ip)</pre>
<p></p><h2>mde</h2>
<p><a href="https://web.archive.org/web/19981202031321/http://www.mde.nhit.edu.tw/">https://web.archive.org/web/19981202031321/http://www.mde.nhit.edu.tw/</a></p><h1>TCExam_error</h1>
<p>ATTENTION: [8192] htmlspecialchars(): Passing null to parameter #1 ($string) of type string is deprecated | LINE: 793 | FILE: C:\tcexam\tcexam\admin\code\tce_edit_answer.php</p>
<p>ATTENTION: [8192] Implicit conversion from float 11.5 to int loses precision | LINE: 639 | FILE: C:\tcexam\tcexam\shared\code\tce_functions_test_stats.php</p>
<p>ATTENTION: [8192] htmlspecialchars(): Passing null to parameter #1 ($string) of type string is deprecated | LINE: 383 | FILE: C:\tcexam\tcexam\admin\code\tce_functions_user_select.php</p>
<p></p><h1>Brython</h1>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language)</a></p>
<h4>Examples:</h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/">https://www.geeksforgeeks.org/python-programming-examples/</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples">https://www.programiz.com/python-programming/examples</a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</a></p>
<h4>Python Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html">An informal introduction to Python</a></p>
<h4>Indentation</h4>
<h4>Variables</h4>
<h4>Comments</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers">Numbers</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings">Strings</a></h4>
<h4>print</h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html">Python control flow tools</a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">for</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">if</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">range</a></h4>
<h4>open</h4>
<h4>read</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists">lists</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">tuples</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">dictionaries</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">functions</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions">try ... except</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">break</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">pass</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">classes</a></h4>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (<a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件).</p>
<p><a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 <a href="https://docs.python.org/3/tutorial/classes.html">class</a> 後, 在範例導入時透過 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a> 引用.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>